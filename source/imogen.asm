; Constants
crtc_cursor_start                       = 10
crtc_interlace_delay                    = 8
crtc_screen_start_high                  = 12
crtc_screen_start_low                   = 13
crtc_vert_displayed                     = 6
crtc_vert_sync_pos                      = 7
game_area_height_cells                  = 24
jmp_indirect_opcode                     = 108
jsr_opcode                              = 32
osbyte_opt                              = 139
osbyte_read_write_escape_break_effect   = 200
osbyte_tv                               = 144
osbyte_vsync                            = 19
osfile                                  = 65501
osword_read_char                        = 10
vdu_disable                             = 21
vdu_goto_xy                             = 31
vdu_set_mode                            = 22

; Memory locations
l0000                   = &0000
l0001                   = &0001
l0002                   = &0002
l0003                   = &0003
l0004                   = &0004
l0005                   = &0005
source_address_low      = &0070
source_address_high     = &0071
destination_address_low = &0072
destination_address_high = &0073
l0074                   = &0074
l0076                   = &0076
l0080                   = &0080
l0081                   = &0081
l0082                   = &0082
l0086                   = &0086
l0087                   = &0087
l0088                   = &0088
load_address            = &3900
screen_start            = &6200
crtc_address_register   = &fe00
crtc_address_write      = &fe01
oswrch                  = &ffee
osword                  = &fff1
osbyte                  = &fff4
oscli                   = &fff7

    org &1200

.relocate_address
.relocate
.pydis_start
    lda #0                                                            ; 1200: a9 00       ..
    sta source_address_low                                            ; 1202: 85 70       .p
    sta destination_address_low                                       ; 1204: 85 72       .r
    lda #>relocate_address                                            ; 1206: a9 12       ..
    sta source_address_high                                           ; 1208: 85 71       .q
    lda #>load_address                                                ; 120a: a9 39       .9
    sta destination_address_high                                      ; 120c: 85 73       .s
    ldy #0                                                            ; 120e: a0 00       ..
.relocate_loop
    lda (destination_address_low),y                                   ; 1210: b1 72       .r
    sta (source_address_low),y                                        ; 1212: 91 70       .p
    iny                                                               ; 1214: c8          .
    bne relocate_loop                                                 ; 1215: d0 f9       ..
    inc source_address_high                                           ; 1217: e6 71       .q
    inc destination_address_high                                      ; 1219: e6 73       .s
    lda destination_address_high                                      ; 121b: a5 73       .s
    cmp #>(load_address + (pydis_end - pydis_start))                  ; 121d: c9 43       .C
    bne relocate_loop                                                 ; 121f: d0 ef       ..
    jmp post_relocate_init                                            ; 1221: 4c 34 12    L4.

    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0               ; 1224: 00 00 00... ...

.post_relocate_init
    lda #osbyte_opt                                                   ; 1234: a9 8b       ..
    ldx #0                                                            ; 1236: a2 00       ..
    ldy #0                                                            ; 1238: a0 00       ..
    jsr osbyte                                                        ; 123a: 20 f4 ff     ..            ; *OPT 0,0: Reset all options for current filing system
; Redundant LDX/LDY here; drive_0_command is not actually used.
    ldx #<drive_0_command                                             ; 123d: a2 8d       ..
    ldy #>drive_0_command                                             ; 123f: a0 13       ..
; *DIR $
    ldx #<dir_dollar_command                                          ; 1241: a2 95       ..
    ldy #>dir_dollar_command                                          ; 1243: a0 13       ..
    jsr oscli                                                         ; 1245: 20 f7 ff     ..
; *FX 200,1
    lda #osbyte_read_write_escape_break_effect                        ; 1248: a9 c8       ..
    ldx #1                                                            ; 124a: a2 01       ..
    ldy #0                                                            ; 124c: a0 00       ..
    jsr osbyte                                                        ; 124e: 20 f4 ff     ..            ; Write Disable ESCAPE action, set normal BREAK action, value X=1
; Read the user's current vertical shift as set by *TV.
    lda #osbyte_tv                                                    ; 1251: a9 90       ..
    ldx #0                                                            ; 1253: a2 00       ..
    ldy #0                                                            ; 1255: a0 00       ..
    jsr osbyte                                                        ; 1257: 20 f4 ff     ..            ; *TV 0,0 turn interlace on
    stx source_address_low                                            ; 125a: 86 70       .p             ; X is the previous screen shift setting
    jsr osbyte                                                        ; 125c: 20 f4 ff     ..
; MODE 4
    lda #vdu_set_mode                                                 ; 125f: a9 16       ..
; Set up a reduced-height mode 4 screen with 24 character lines starting at address
; &6200, respecting the user's current vertical shift as set by *TV.
    jsr oswrch                                                        ; 1261: 20 ee ff     ..            ; Write character 22
    lda #4                                                            ; 1264: a9 04       ..
    jsr oswrch                                                        ; 1266: 20 ee ff     ..            ; Write character 4
    lda #crtc_cursor_start                                            ; 1269: a9 0a       ..
    sta crtc_address_register                                         ; 126b: 8d 00 fe    ...
    lda #&20 ; ' '                                                    ; 126e: a9 20       .
    sta crtc_address_write                                            ; 1270: 8d 01 fe    ...
    lda #&23 ; '#'                                                    ; 1273: a9 23       .#
    clc                                                               ; 1275: 18          .
    adc source_address_low                                            ; 1276: 65 70       ep
    sec                                                               ; 1278: 38          8
    sbc #6                                                            ; 1279: e9 06       ..
    tax                                                               ; 127b: aa          .
    lda #crtc_vert_sync_pos                                           ; 127c: a9 07       ..
    sta crtc_address_register                                         ; 127e: 8d 00 fe    ...
    stx crtc_address_write                                            ; 1281: 8e 01 fe    ...
    lda #crtc_screen_start_low                                        ; 1284: a9 0d       ..
    sta crtc_address_register                                         ; 1286: 8d 00 fe    ...
    lda #<(screen_start DIV 8)                                        ; 1289: a9 40       .@
    sta crtc_address_write                                            ; 128b: 8d 01 fe    ...
    lda #crtc_screen_start_high                                       ; 128e: a9 0c       ..
    sta crtc_address_register                                         ; 1290: 8d 00 fe    ...
    lda #>(screen_start DIV 8)                                        ; 1293: a9 0c       ..
    sta crtc_address_write                                            ; 1295: 8d 01 fe    ...
    lda #crtc_vert_displayed                                          ; 1298: a9 06       ..
    sta crtc_address_register                                         ; 129a: 8d 00 fe    ...
    lda #game_area_height_cells                                       ; 129d: a9 18       ..
    sta crtc_address_write                                            ; 129f: 8d 01 fe    ...
    lda #crtc_interlace_delay                                         ; 12a2: a9 08       ..
    sta crtc_address_register                                         ; 12a4: 8d 00 fe    ...
    lda #0                                                            ; 12a7: a9 00       ..
    sta crtc_address_write                                            ; 12a9: 8d 01 fe    ...
; wait
    lda #20                                                           ; 12ac: a9 14       ..
    jsr wait_for_a_vsyncs                                             ; 12ae: 20 9b 13     ..
; copy $800 bytes of memory from $1368 to $67C0, which copies the big IMOGEN logo to
; the screen. It starts $80 bytes before it should obviously do, perhaps as
; obfuscation.
    ldx #8                                                            ; 12b1: a2 08       ..
    ldy #&80                                                          ; 12b3: a0 80       ..
    sty l0074                                                         ; 12b5: 84 74       .t
    lda #&e8                                                          ; 12b7: a9 e8       ..
    sec                                                               ; 12b9: 38          8
    sbc l0074                                                         ; 12ba: e5 74       .t
    sta source_address_low                                            ; 12bc: 85 70       .p
    lda #&13                                                          ; 12be: a9 13       ..
    sbc #0                                                            ; 12c0: e9 00       ..
    sta source_address_high                                           ; 12c2: 85 71       .q
    lda #&40 ; '@'                                                    ; 12c4: a9 40       .@
    sec                                                               ; 12c6: 38          8
    sbc l0074                                                         ; 12c7: e5 74       .t
    sta destination_address_low                                       ; 12c9: 85 72       .r
    lda #&68 ; 'h'                                                    ; 12cb: a9 68       .h
    sbc #0                                                            ; 12cd: e9 00       ..
    sta destination_address_high                                      ; 12cf: 85 73       .s
.copy_loop
    lda (source_address_low),y                                        ; 12d1: b1 70       .p
    sta (destination_address_low),y                                   ; 12d3: 91 72       .r
    iny                                                               ; 12d5: c8          .
    bne copy_loop                                                     ; 12d6: d0 f9       ..
    inc source_address_high                                           ; 12d8: e6 71       .q
    inc destination_address_high                                      ; 12da: e6 73       .s
    dex                                                               ; 12dc: ca          .
    bne copy_loop                                                     ; 12dd: d0 f2       ..
    lda #vdu_goto_xy                                                  ; 12df: a9 1f       ..
    jsr oswrch                                                        ; 12e1: 20 ee ff     ..            ; Write character 31
    lda #6                                                            ; 12e4: a9 06       ..
    jsr oswrch                                                        ; 12e6: 20 ee ff     ..            ; Write character 6
    lda #&15                                                          ; 12e9: a9 15       ..
    jsr oswrch                                                        ; 12eb: 20 ee ff     ..            ; Write character 21
    ldy #0                                                            ; 12ee: a0 00       ..
.print_written_by_string_loop
    lda written_by_string,y                                           ; 12f0: b9 a9 13    ...
    cmp #&0d                                                          ; 12f3: c9 0d       ..
    beq finished_written_by_string                                    ; 12f5: f0 07       ..
    jsr print_italic                                                  ; 12f7: 20 4d 13     M.
    iny                                                               ; 12fa: c8          .
    jmp print_written_by_string_loop                                  ; 12fb: 4c f0 12    L..

; PRINT TAB(3,23)
.finished_written_by_string
    lda #vdu_goto_xy                                                  ; 12fe: a9 1f       ..
    jsr oswrch                                                        ; 1300: 20 ee ff     ..            ; Write character 31
    lda #3                                                            ; 1303: a9 03       ..
    jsr oswrch                                                        ; 1305: 20 ee ff     ..            ; Write character 3
    lda #&17                                                          ; 1308: a9 17       ..
    jsr oswrch                                                        ; 130a: 20 ee ff     ..            ; Write character 23
    ldy #0                                                            ; 130d: a0 00       ..
.print_copyright_string_loop
    lda copyright_string,y                                            ; 130f: b9 c5 13    ...
    cmp #&0d                                                          ; 1312: c9 0d       ..
    beq finished_copyright_string                                     ; 1314: f0 07       ..
    jsr print_italic                                                  ; 1316: 20 4d 13     M.
    iny                                                               ; 1319: c8          .
    jmp print_copyright_string_loop                                   ; 131a: 4c 0f 13    L..

.finished_copyright_string
    lda #vdu_disable                                                  ; 131d: a9 15       ..
    jsr oswrch                                                        ; 131f: 20 ee ff     ..            ; Write character 21
; Obfuscated code to load the 'G' file and transfer control to its execution address,
; relying on the fact that OSFILE &FF will have filled in the execution address at &76
; after loading the file.
; At address zero, write 'JSR osfile:JMP ($76)'
    lda #jsr_opcode                                                   ; 1322: a9 20       .
    sta l0000                                                         ; 1324: 85 00       ..
    lda #<osfile                                                      ; 1326: a9 dd       ..
    sta l0001                                                         ; 1328: 85 01       ..
    lda #>osfile                                                      ; 132a: a9 ff       ..
    sta l0002                                                         ; 132c: 85 02       ..
    lda #jmp_indirect_opcode                                          ; 132e: a9 6c       .l
    sta l0003                                                         ; 1330: 85 03       ..
    lda #&76 ; 'v'                                                    ; 1332: a9 76       .v
    sta l0004                                                         ; 1334: 85 04       ..
    lda #0                                                            ; 1336: a9 00       ..
    sta l0005                                                         ; 1338: 85 05       ..
; point to filename
    lda #<osfile_load_filename                                        ; 133a: a9 a7       ..
    sta source_address_low                                            ; 133c: 85 70       .p
    lda #>osfile_load_filename                                        ; 133e: a9 13       ..
    sta source_address_high                                           ; 1340: 85 71       .q
; Set A=&FF for OSFILE to load a file. We also store this at &76, which is byte 6 of
; the control block, telling OSFILE to load at the file's own load address.
    lda #&ff                                                          ; 1342: a9 ff       ..
    sta l0076                                                         ; 1344: 85 76       .v
    ldx #<source_address_low                                          ; 1346: a2 70       .p
    ldy #>source_address_low                                          ; 1348: a0 00       ..
    jmp l0000                                                         ; 134a: 4c 00 00    L..

.print_italic
    cmp #&21 ; '!'                                                    ; 134d: c9 21       .!
    bcc print_character                                               ; 134f: 90 39       .9
    cmp #&7f                                                          ; 1351: c9 7f       ..
    bcs print_character                                               ; 1353: b0 35       .5
    sta l0080                                                         ; 1355: 85 80       ..
    txa                                                               ; 1357: 8a          .
    pha                                                               ; 1358: 48          H
    tya                                                               ; 1359: 98          .
    pha                                                               ; 135a: 48          H
; read character definition
    lda #osword_read_char                                             ; 135b: a9 0a       ..
    ldx #<(l0080)                                                     ; 135d: a2 80       ..
    ldy #>(l0080)                                                     ; 135f: a0 00       ..
    jsr osword                                                        ; 1361: 20 f1 ff     ..            ; Read character definition
; shift the rows of the character definition to italicise it
    lsr l0081                                                         ; 1364: 46 81       F.
    lsr l0082                                                         ; 1366: 46 82       F.
    asl l0086                                                         ; 1368: 06 86       ..
    asl l0087                                                         ; 136a: 06 87       ..
    asl l0088                                                         ; 136c: 06 88       ..
; redefine character 255 to the italicised character
    lda #&17                                                          ; 136e: a9 17       ..
    jsr oswrch                                                        ; 1370: 20 ee ff     ..            ; Write character 23
    lda #&ff                                                          ; 1373: a9 ff       ..
    jsr oswrch                                                        ; 1375: 20 ee ff     ..            ; Write character 255
    ldx #0                                                            ; 1378: a2 00       ..
.print_italic_loop
    lda l0081,x                                                       ; 137a: b5 81       ..
    jsr oswrch                                                        ; 137c: 20 ee ff     ..            ; Write character
    inx                                                               ; 137f: e8          .
    cpx #8                                                            ; 1380: e0 08       ..
    bcc print_italic_loop                                             ; 1382: 90 f6       ..
    pla                                                               ; 1384: 68          h
    tay                                                               ; 1385: a8          .
    pla                                                               ; 1386: 68          h
    tax                                                               ; 1387: aa          .
    lda #&ff                                                          ; 1388: a9 ff       ..
.print_character
    jmp oswrch                                                        ; 138a: 4c ee ff    L..            ; Write character 255

.drive_0_command
    equs "DRIVE 0"                                                    ; 138d: 44 52 49... DRI
    equb &0d                                                          ; 1394: 0d          .
.dir_dollar_command
    equs "DIR $"                                                      ; 1395: 44 49 52... DIR
    equb &0d                                                          ; 139a: 0d          .

.wait_for_a_vsyncs
    sta source_address_low                                            ; 139b: 85 70       .p
.wait_loop
    lda #osbyte_vsync                                                 ; 139d: a9 13       ..
    jsr osbyte                                                        ; 139f: 20 f4 ff     ..            ; Wait for vertical sync
    dec source_address_low                                            ; 13a2: c6 70       .p
    bne wait_loop                                                     ; 13a4: d0 f7       ..
    rts                                                               ; 13a6: 60          `

.osfile_load_filename
    equs "G", &0d                                                     ; 13a7: 47 0d       G.
.written_by_string
    equs "Written by Michael St Aubyn"                                ; 13a9: 57 72 69... Wri
    equb &0d                                                          ; 13c4: 0d          .
.copyright_string
    equs "Copyright Micro Power Limited 1986"                         ; 13c5: 43 6f 70... Cop
    equb &0d                                                          ; 13e7: 0d          .
.imogen_logo
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 13e8: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 13f4: 00 00 00... ...
    equb   1,   1,   1,   0,   0,   0,   0,   0, &ff, &ff, &ff, &1f   ; 1400: 01 01 01... ...
    equb &0f, &0f, &1f, &1f, &ff, &ff, &ff, &fc, &f0, &e0, &e0, &e0   ; 140c: 0f 0f 1f... ...
    equb &c0, &c0, &c0,   0,   0,   0,   0,   0,   1,   1,   1,   0   ; 1418: c0 c0 c0... ...
    equb   0,   0,   0,   0, &ff, &ff, &ff, &1f, &0f, &1f, &1f, &1f   ; 1424: 00 00 00... ...
    equb &f0, &f0, &f0, &f0, &f0, &f0, &f0, &f0,   0,   0,   0,   0   ; 1430: f0 f0 f0... ...
    equb   0,   0,   0,   0,   0,   0,   0,   1,   1,   3,   7,   7   ; 143c: 00 00 00... ...
    equb &7f, &ff, &ff, &ff, &ff, &fe, &fe, &fe, &fc, &fc, &fc, &c0   ; 1448: 7f ff ff... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1454: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   1,   3,   7,   1, &0f, &3f, &7f   ; 1460: 00 00 00... ...
    equb &ff, &fc, &fc, &f8, &ff, &ff, &ff, &c1,   0,   0,   0,   0   ; 146c: ff fc fc... ...
    equb &c0, &f0, &f8, &fc, &fe, &7e, &7f, &3f,   0,   0,   0,   0   ; 1478: c0 f0 f8... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1484: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   1,   0,   3, &0f, &1f   ; 1490: 00 00 00... ...
    equb &3f, &7f, &ff, &fe, &7f, &ff, &ff, &f0, &c0,   0,   0,   0   ; 149c: 3f 7f ff... ?..
    equb &f0, &fc, &fe, &3f, &0f,   7,   3,   1, &38, &78, &78, &f8   ; 14a8: f0 fc fe... ...
    equb &f8, &f0, &f0, &f0,   0,   0,   0,   0,   0,   0,   0,   0   ; 14b4: f8 f0 f0... ...
    equb &0f, &0f, &0f,   0,   0,   0,   0,   0, &ff, &ff, &ff, &ff   ; 14c0: 0f 0f 0f... ...
    equb &7f, &7f, &ff, &ff, &ff, &ff, &ff, &e0, &80,   0,   0,   0   ; 14cc: 7f 7f ff... ...
    equb &ff, &ff, &ff, &0f,   3,   1,   1,   0, &f8, &f8, &f8, &f8   ; 14d8: ff ff ff... ...
    equb &f8, &f0, &f0, &f0,   0,   0,   0,   0,   0,   0,   0,   0   ; 14e4: f8 f0 f0... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0, &ff, &ff, &ff, &0f   ; 14f0: 00 00 00... ...
    equb   7, &0f, &0f, &0e, &f8, &f8, &fc, &fc, &fc, &fe, &fe, &fe   ; 14fc: 07 0f 0f... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0, &3f, &3f, &3f,   3   ; 1508: 00 00 00... ...
    equb   1,   1,   1,   1, &ff, &ff, &ff, &fc, &f0, &e0, &c0, &c0   ; 1514: 01 01 01... ...
    equb &80, &80, &80,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1520: 80 80 80... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 152c: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1538: 00 00 00... ...
    equb   0,   0,   0,   0, &1f, &3f, &3f, &3f, &3f, &7f, &7f, &7f   ; 1544: 00 00 00... ...
    equb &c0, &c0, &c0, &80, &80, &80, &80,   0,   0,   0,   0,   0   ; 1550: c0 c0 c0... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 155c: 00 00 00... ...
    equb &1f, &3f, &3f, &3f, &7f, &7b, &73, &f3, &f0, &f8, &f8, &f8   ; 1568: 1f 3f 3f... .??
    equb &f8, &f8, &f8, &f8,   0,   0,   0,   0,   0,   0,   0,   0   ; 1574: f8 f8 f8... ...
    equb &0f, &1f, &1f, &3f, &3f, &7f, &ff, &f7, &fc, &fc, &fc, &f8   ; 1580: 0f 1f 1f... ...
    equb &f8, &f8, &f8, &f0,   0,   0,   0,   0,   0,   0,   0,   0   ; 158c: f8 f8 f8... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   7, &0f, &1f, &1f   ; 1598: 00 00 00... ...
    equb &3f, &3f, &7f, &7f, &f0, &f0, &e0, &c0, &c0, &80, &80, &80   ; 15a4: 3f 3f 7f... ??.
    equb   0,   0,   0,   0,   0,   0,   0,   0, &3f, &3f, &3f, &3f   ; 15b0: 00 00 00... ...
    equb &3f, &3f, &3f, &3f,   0, &80, &80, &80, &80, &80, &80, &80   ; 15bc: 3f 3f 3f... ???
    equb   0,   0,   0,   0,   0,   0,   0,   0,   1,   3,   7,   7   ; 15c8: 00 00 00... ...
    equb &0f, &0f, &1f, &1f, &fc, &fc, &f8, &f0, &f0, &e0, &e0, &e0   ; 15d4: 0f 0f 1f... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0   ; 15e0: 00 00 00... ...
    equb   0,   0,   0,   0, &f0, &f0, &f0, &e0, &e0, &e0, &e0,   0   ; 15ec: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   1,   1   ; 15f8: 00 00 00... ...
    equb   1,   3,   3,   3, &fe, &fe, &fe, &fc, &fc, &fc, &fc, &f8   ; 1604: 01 03 03... ...
    equb   0,   0,   0,   0,   3,   7,   7, &0f,   0,   0,   0,   0   ; 1610: 00 00 00... ...
    equb &80, &80, &80, &80, &f0, &f0, &f0, &e0, &e0, &e0, &e0,   0   ; 161c: 80 80 80... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1628: 00 00 00... ...
    equb   0,   0,   0,   0, &0e, &1e, &1e, &1c, &3c, &3c, &38, &78   ; 1634: 00 00 00... ...
    equb &ff, &ff, &7f, &7f, &7f, &3f, &3f, &3f,   0,   0,   0, &80   ; 1640: ff ff 7f... ...
    equb &80, &80, &c0, &c0,   3,   3,   3,   7,   7,   7, &0f, &0f   ; 164c: 80 80 c0... ...
    equb &c0, &c0, &80, &80, &80,   0,   0,   0,   0,   0,   0,   0   ; 1658: c0 c0 80... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1664: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1670: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   1,   1,   1,   3   ; 167c: 00 00 00... ...
    equb &ff, &ff, &fe, &fe, &fe, &fe, &fc, &fc,   0,   0,   0,   0   ; 1688: ff ff fe... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1694: 00 00 00... ...
    equb   0,   0,   0,   1,   1,   1,   3,   3, &f3, &e3, &e3, &e3   ; 16a0: 00 00 00... ...
    equb &e3, &c3, &c3, &c3, &f8, &f8, &f8, &f8, &f8, &f8, &f8, &f8   ; 16ac: e3 c3 c3... ...
    equb   1,   1,   3,   7,   7, &0f, &0f, &1e, &ef, &ef, &cf, &cf   ; 16b8: 01 01 03... ...
    equb &9f, &1f, &1f, &3f, &f0, &f0, &e0, &e0, &e0, &e0, &c0, &c0   ; 16c4: 9f 1f 1f... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 16d0: 00 00 00... ...
    equb   1,   1,   1,   1, &7f, &ff, &ff, &fe, &fe, &fe, &fc, &fc   ; 16dc: 01 01 01... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 16e8: 00 00 00... ...
    equb   0,   0,   0,   0, &3f, &3f, &7f, &7f, &7f, &7f, &ff, &ff   ; 16f4: 00 00 00... ...
    equb &80, &80, &80, &80,   0,   0,   0,   0,   0,   0,   0,   0   ; 1700: 80 80 80... ...
    equb   0,   0,   0,   0, &1f, &3f, &3f, &3f, &7f, &7f, &7f, &7f   ; 170c: 00 00 00... ...
    equb &c0, &c0, &c0, &80, &80, &80,   0,   0,   0,   0,   0,   0   ; 1718: c0 c0 c0... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1724: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1730: 00 00 00... ...
    equb   0,   0,   0,   0,   7,   7,   7,   7, &0f, &0f, &0f, &1f   ; 173c: 00 00 00... ...
    equb &f8, &f8, &f0, &f0, &ff, &ff, &ff, &e0, &0f, &1f, &3f, &ff   ; 1748: f8 f8 f0... ...
    equb &fe, &fe, &fe, &fe,   0,   0,   0,   0,   0,   0,   0,   0   ; 1754: fe fe fe... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1760: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   1   ; 176c: 00 00 00... ...
    equb &78, &70, &70, &f0, &f0, &e0, &e0, &e0, &1f, &1f, &1f, &0f   ; 1778: 78 70 70... xpp
    equb &0f, &0f,   7,   7, &c0, &e0, &e0, &e0, &f0, &f0, &f0, &f8   ; 1784: 0f 0f 07... ...
    equb &0e, &0e, &1e, &1e, &1c, &3c, &3c, &38,   0,   0,   0,   0   ; 1790: 0e 0e 1e... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 179c: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 17a8: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 17b4: 00 00 00... ...
    equb   3,   3,   3,   7,   7,   7, &0f, &0f, &fc, &f8, &f8, &f8   ; 17c0: 03 03 03... ...
    equb &f8, &f0, &f0, &f0,   0,   0,   0,   0,   0,   0,   0,   0   ; 17cc: f8 f0 f0... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   3,   7,   7,   7   ; 17d8: 00 00 00... ...
    equb   7, &0f, &0f, &0e, &83, &83, &83,   3,   3,   3,   3,   1   ; 17e4: 07 0f 0f... ...
    equb &f8, &f8, &f8, &fc, &fc, &fd, &fd, &ff, &3e, &3c, &78, &f8   ; 17f0: f8 f8 f8... ...
    equb &f0, &e0, &e0, &c0, &3f, &3f, &3f, &7f, &7f, &7f, &ff, &ff   ; 17fc: f0 e0 e0... ...
    equb &c0, &80, &80, &80, &80,   0,   0,   0,   0,   0,   0,   0   ; 1808: c0 80 80... ...
    equb   0,   0,   0,   0,   3,   3,   3,   3,   3,   3,   3,   3   ; 1814: 00 00 00... ...
    equb &fc, &fc, &f8, &f8, &f8, &f8, &f8, &f8,   0,   0,   0,   0   ; 1820: fc fc f8... ...
    equb   0,   0,   0,   0,   0,   0,   1,   1,   1,   3,   3,   7   ; 182c: 00 00 00... ...
    equb &fe, &fe, &fe, &fe, &fc, &fc, &fc, &f8,   0,   0,   0,   0   ; 1838: fe fe fe... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1844: 00 00 00... ...
    equb &ff, &ff, &fe, &fe, &fe, &fe, &fe, &fe,   0,   0,   0,   0   ; 1850: ff ff fe... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0, &3f, &3f, &3f,   3   ; 185c: 00 00 00... ...
    equb   0,   0,   0,   0, &ff, &ff, &ff, &ff,   0,   0,   0,   0   ; 1868: 00 00 00... ...
    equb &f8, &f8, &f8, &80,   0,   0,   0,   0,   0,   0,   0,   0   ; 1874: f8 f8 f8... ...
    equb &1f, &1f, &1f, &3f, &3f, &3f, &7f, &7f, &e0, &c0, &c0, &c0   ; 1880: 1f 1f 1f... ...
    equb &c0, &80, &80, &80, &7c, &3c, &3c, &3c, &38, &38, &38,   0   ; 188c: c0 80 80... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1898: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 18a4: 00 00 00... ...
    equb   1,   3,   3,   3,   3,   7,   7,   7, &c0, &c0, &c0, &80   ; 18b0: 01 03 03... ...
    equb &80, &80, &80,   0,   7,   3,   3,   3,   1,   1,   1,   0   ; 18bc: 80 80 80... ...
    equb &f8, &f8, &fc, &fc, &fc, &fe, &fe, &ff, &38, &78, &78, &70   ; 18c8: f8 f8 fc... ...
    equb &f0, &f0, &e0, &e0,   0,   0,   0,   0,   0,   0,   0,   0   ; 18d4: f0 f0 e0... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 18e0: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 18ec: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0, &0f, &0f, &1f, &1f   ; 18f8: 00 00 00... ...
    equb &1f, &3f, &3f, &3f, &e0, &e0, &e0, &e0, &c0, &c0, &c0, &80   ; 1904: 1f 3f 3f... .??
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1910: 00 00 00... ...
    equb   0,   0,   0,   0, &1e, &1e, &1c, &3c, &3c, &38, &38, &78   ; 191c: 00 00 00... ...
    equb   1,   1,   1,   1,   1,   1,   1,   1, &ff, &ff, &ff, &ff   ; 1928: 01 01 01... ...
    equb &fe, &fe, &fc, &f8, &c0, &80,   1,   1,   1,   3,   3,   3   ; 1934: fe fe fc... ...
    equb &fe, &fe, &fe, &fe, &fc, &fc, &fc, &f8,   0,   0,   0,   0   ; 1940: fe fe fe... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 194c: 00 00 00... ...
    equb   3,   3,   3,   3,   1,   1,   1,   0, &f8, &f8, &f8, &f8   ; 1958: 03 03 03... ...
    equb &f8, &fc, &fc, &fe,   0,   0,   0,   0,   0,   0,   0,   0   ; 1964: f8 fc fc... ...
    equb   7, &0f, &0f, &1f, &1f, &3f, &7f, &7f, &f8, &f0, &f0, &e0   ; 1970: 07 0f 0f... ...
    equb &c0, &c0, &80,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 197c: c0 c0 80... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0, &fe, &fe, &fe, &fe   ; 1988: 00 00 00... ...
    equb &7e, &7f, &7f, &3f,   0,   0,   0,   0,   0,   0,   0, &80   ; 1994: 7e 7f 7f... ~..
    equb   1,   3,   3,   7,   7, &0f, &1f, &1f, &fe, &fc, &f8, &f0   ; 19a0: 01 03 03... ...
    equb &f0, &e0, &e0, &c0,   0,   0,   0,   0,   0,   0,   0,   0   ; 19ac: f0 e0 e0... ...
    equb   0,   0,   0,   0,   0,   1,   1,   1, &7f, &7f, &ff, &ff   ; 19b8: 00 00 00... ...
    equb &fe, &fe, &fe, &fc,   0,   0,   0,   0,   0,   0,   0,   0   ; 19c4: fe fe fe... ...
    equb   0,   0,   0,   0,   1,   1,   3, &0f, &38, &78, &78, &f8   ; 19d0: 00 00 00... ...
    equb &f0, &f0, &e0, &e0,   0,   0,   0,   0,   0,   0,   0,   0   ; 19dc: f0 f0 e0... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0, &0f, &0f, &0e, &1e   ; 19e8: 00 00 00... ...
    equb &1e, &1c, &1c, &3c,   0,   0,   0,   0,   0,   0,   0,   0   ; 19f4: 1e 1c 1c... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0, &ff, &ff, &7f, &7f   ; 1a00: 00 00 00... ...
    equb &7f, &3f, &3f, &3f, &e0, &c0, &c0, &c0, &c0, &80, &80, &80   ; 1a0c: 7f 3f 3f... .??
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1a18: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1a24: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   1, &1f, &1f   ; 1a30: 00 00 00... ...
    equb &1f,   0,   0,   0, &7f, &ff, &ff, &ff, &ff,   0,   0,   0   ; 1a3c: 1f 00 00... ...
    equb &80, &c0, &fc, &fc, &fc,   0,   0,   0,   0,   0,   0,   0   ; 1a48: 80 c0 fc... ...
    equb   0,   0,   0,   0,   0,   1, &1f, &1f, &1f,   0,   0,   0   ; 1a54: 00 00 00... ...
    equb &78, &fe, &ff, &ff, &ff,   0,   0,   0,   1,   1, &c1, &c1   ; 1a60: 78 fe ff... x..
    equb &c1,   0,   0,   0, &f8, &f0, &e1, &e1, &c1,   0,   0,   0   ; 1a6c: c1 00 00... ...
    equb   7, &1f, &ff, &ff, &ff,   0,   0,   0, &f8, &fc, &ff, &ff   ; 1a78: 07 1f ff... ...
    equb &ff,   0,   0,   0,   0,   0, &c0, &c0, &c0,   0,   0,   0   ; 1a84: ff 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1a90: 00 00 00... ...
    equb   0,   0,   0,   0, &fe, &7f, &3f, &0f,   3,   0,   0,   0   ; 1a9c: 00 00 00... ...
    equb   0,   3, &ff, &ff, &ff,   0,   0,   0, &fe, &fc, &f8, &e0   ; 1aa8: 00 03 ff... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1ab4: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1ac0: 00 00 00... ...
    equb   0,   0,   0,   0, &3f, &1f, &0f,   3,   0,   0,   0,   0   ; 1acc: 00 00 00... ...
    equb &c0, &f0, &ff, &ff, &7f,   0,   0,   0, &3f, &ff, &fe, &f8   ; 1ad8: c0 f0 ff... ...
    equb &c0,   0,   0,   0, &80,   0,   0,   0,   0,   0,   0,   0   ; 1ae4: c0 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   3, &0f, &ff, &ff   ; 1af0: 00 00 00... ...
    equb &ff,   0,   0,   0, &fc, &fe, &ff, &ff, &ff,   0,   0,   0   ; 1afc: ff 00 00... ...
    equb   0,   1, &ff, &ff, &ff,   0,   0,   0, &1f, &ff, &ff, &ff   ; 1b08: 00 01 ff... ...
    equb &ff,   0,   0,   0, &e0, &c0, &c0, &80, &80,   0,   0,   0   ; 1b14: ff 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, &0f, &0f   ; 1b20: 00 00 00... ...
    equb &0f,   0,   0,   0, &3c, &ff, &ff, &ff, &ff,   0,   0,   0   ; 1b2c: 0f 00 00... ...
    equb   0,   0, &e0, &e0, &e0,   0,   0,   0,   0,   0,   0,   0   ; 1b38: 00 00 e0... ...
    equb   0,   0,   0,   0, &1f, &1f, &1f, &0e, &0e,   0,   0,   0   ; 1b44: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1b50: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 1b5c: 00 00 00... ...
; unused?
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 1b68: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 1b7c: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 1b90: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 1ba4: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 1bb8: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 1bcc: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 1be0: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0                           ; 1bf4: 00 00 00... ...
.pydis_end

; Automatically generated labels:
;     l0000
;     l0001
;     l0002
;     l0003
;     l0004
;     l0005
;     l0074
;     l0076
;     l0080
;     l0081
;     l0082
;     l0086
;     l0087
;     l0088
    assert <(l0080) == &80
    assert <(screen_start DIV 8) == &40
    assert <dir_dollar_command == &95
    assert <drive_0_command == &8d
    assert <osfile == &dd
    assert <osfile_load_filename == &a7
    assert <source_address_low == &70
    assert >(l0080) == &00
    assert >(load_address + (pydis_end - pydis_start)) == &43
    assert >(screen_start DIV 8) == &0c
    assert >dir_dollar_command == &13
    assert >drive_0_command == &13
    assert >load_address == &39
    assert >osfile == &ff
    assert >osfile_load_filename == &13
    assert >relocate_address == &12
    assert >source_address_low == &00
    assert crtc_cursor_start == &0a
    assert crtc_interlace_delay == &08
    assert crtc_screen_start_high == &0c
    assert crtc_screen_start_low == &0d
    assert crtc_vert_displayed == &06
    assert crtc_vert_sync_pos == &07
    assert game_area_height_cells == &18
    assert jmp_indirect_opcode == &6c
    assert jsr_opcode == &20
    assert osbyte_opt == &8b
    assert osbyte_read_write_escape_break_effect == &c8
    assert osbyte_tv == &90
    assert osbyte_vsync == &13
    assert osword_read_char == &0a
    assert vdu_disable == &15
    assert vdu_goto_xy == &1f
    assert vdu_set_mode == &16

save pydis_start, pydis_end
